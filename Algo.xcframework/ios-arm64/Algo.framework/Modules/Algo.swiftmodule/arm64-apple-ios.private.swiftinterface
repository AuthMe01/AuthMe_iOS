// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Algo
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import Algo
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class authme_inference {
  public func initialize(contextId: Swift.UnsafeMutablePointer<Swift.Int32>, modelName: Swift.String, modelPath: Swift.String) -> Swift.Int32
  public func free(contextId: Swift.Int32, modelName: Swift.String) -> Swift.Int32
  public func get_version(contextId: Swift.Int32, modelName: Swift.String, version: Swift.UnsafeMutablePointer<Swift.CChar>) -> Swift.Int32
  public func get_info(contextId: Swift.Int32, modelName: Swift.String, jsonStringMaxLength: Swift.Int, jsonString: Swift.UnsafeMutablePointer<Swift.CChar>) -> Swift.Int32
  @objc deinit
}
@_inheritsConvenienceInitializers public class FASService : Algo.CoreService {
  @objc deinit
  public struct FASModelVersion_ {
    public var models: (Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion)
  }
  public func getVersion() -> (Algo.FASService.FASModelVersion_, Swift.Int, Swift.Int)
  public func initialize(ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, stage_setting: Swift.UnsafePointer<Algo.FASStageSetting>) -> Swift.Int
  public func initialize(serviceModel: Algo.FASServiceModel, ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, stage_setting: Swift.UnsafePointer<Algo.FASStageSetting>) -> Swift.Int
  public func free() -> Swift.Int
  public func setParam(params: Swift.UnsafePointer<Algo.FASParams>) -> Swift.Int
  public func getParam() -> Algo.FASParams
  public func setOption(option: Swift.String, value: Swift.String) -> Swift.Int
  public func getOption(option: Swift.String) -> Swift.String
  public func exec(image: UIKit.UIImage, result: Swift.UnsafeMutablePointer<Algo.FASResult>) -> Swift.Int
  public func execWithDepth(image: UIKit.UIImage, depth: UIKit.UIImage, result: Swift.UnsafeMutablePointer<Algo.FASResult>) -> Swift.Int
  public func stop() -> Swift.Int
  public func getDebugInfo(setting: Swift.UnsafePointer<Algo.FASDebugInfoSetting>, info: Swift.UnsafeMutablePointer<Algo.FASDebugInfo>) -> Swift.Int
  public func getJsonReport() -> (Swift.String, Swift.Int)
  public func setPubkey(key: Swift.String) -> Swift.Int
  override public init()
}
public class authme_engine {
  public init()
  public func verify(cert: Swift.String, token: Swift.String) -> Swift.Int
  public func setReportKey(publicKey: Swift.String) -> Swift.Int
  public func getVersion() -> (Swift.Int, Swift.String)
  public func getLog() -> (Swift.Int, Swift.String)
  @objc deinit
}
public struct OCRServiceModel {
  public let OCR_00: Swift.String
  public let OCR_01: Swift.String
  public let OCR_01_FB: Swift.String
  public let OCR_03: Swift.String
  public init(OCR_00: Swift.String, OCR_01: Swift.String, OCR_01_FB: Swift.String, OCR_03: Swift.String)
}
public struct FASServiceModel {
  public let FACE_00: Swift.String
  public let FACE_01: Swift.String
  public let FACE_02: Swift.String
  public init(FACE_00: Swift.String, FACE_01: Swift.String, FACE_02: Swift.String)
}
public struct IDCardAntiFraudServiceModel {
  public let OCR_00: Swift.String
  public let OCR_01: Swift.String
  public let OCR_01_FB: Swift.String
  public let IDCardAntiFraud_00: Swift.String
  public let OCR_03: Swift.String
  public init(OCR_00: Swift.String, OCR_01: Swift.String, OCR_01_FB: Swift.String, IDCardAntiFraud_00: Swift.String, OCR_03: Swift.String)
}
public struct MRZServiceModel {
  public let OCR_00: Swift.String
  public let OCR_01: Swift.String
  public let OCR_01_FB: Swift.String
  public let OCR_03: Swift.String
  public let MRZ_00: Swift.String
  public let MRZ_01: Swift.String
  public init(OCR_00: Swift.String, OCR_01: Swift.String, OCR_01_FB: Swift.String, OCR_03: Swift.String, MRZ_00: Swift.String, MRZ_01: Swift.String)
}
public class CoreService {
  public struct ModelVersion {
    public var name: Swift.String
    public var version: Swift.String
  }
  @objc deinit
  public init()
}
@_inheritsConvenienceInitializers public class CardOCRService : Algo.CoreService {
  @objc deinit
  public struct CardOCRModelVersion_ {
    public var models: (Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion)
  }
  public func getVersion() -> (Algo.CardOCRService.CardOCRModelVersion_, Swift.Int, Swift.Int)
  public func initialize(ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, card_roi: Swift.UnsafePointer<Algo.ServiceROI>, targetCardType: Swift.String) -> Swift.Int
  public func initialize(serviceModel: Algo.OCRServiceModel, ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, card_roi: Swift.UnsafePointer<Algo.ServiceROI>, targetCardType: Swift.String) -> Swift.Int
  public func free() -> Swift.Int
  public func setParam(params: Swift.UnsafePointer<Algo.CardOCRParams>) -> Swift.Int
  public func getParam() -> Algo.CardOCRParams
  public func setOption(option: Swift.String, value: Swift.String) -> Swift.Int
  public func getOption(option: Swift.String) -> Swift.String
  public func exec(image: UIKit.UIImage, result: Swift.UnsafeMutablePointer<Algo.CardOCRResult>) -> Swift.Int
  public func stop() -> Swift.Int
  public func getDebugInfo(setting: Swift.UnsafePointer<Algo.CardOCRDebugInfoSetting>, info: Swift.UnsafeMutablePointer<Algo.CardOCRDebugInfo>) -> Swift.Int
  public func getJsonReport() -> (Swift.String, Swift.Int)
  public func CCharToString(_ cCharTuple: Swift.UnsafePointer<Swift.CChar>) -> Swift.String
  public func getCropImage() -> UIKit.UIImage?
  public func setPubkey(key: Swift.String) -> Swift.Int
  public func getOCRJsonReport() -> Swift.String
  override public init()
}
@_inheritsConvenienceInitializers public class IDCardFraudService : Algo.CoreService {
  @objc deinit
  public struct IDCardAntiFraudModelVersion_ {
    public var models: (Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion)
  }
  public func getVersion() -> (Algo.IDCardFraudService.IDCardAntiFraudModelVersion_, Swift.Int, Swift.Int)
  public func initialize(ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, card_roi: Swift.UnsafePointer<Algo.ServiceROI>, settings: Swift.UnsafePointer<Algo.IDCardAntiFraudStageSetting>) -> Swift.Int
  public func initialize(serviceModel: Algo.IDCardAntiFraudServiceModel, ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, card_roi: Swift.UnsafePointer<Algo.ServiceROI>, settings: Swift.UnsafePointer<Algo.IDCardAntiFraudStageSetting>) -> Swift.Int
  public func free() -> Swift.Int
  public func setParam(params: Swift.UnsafePointer<Algo.IDCardAntiFraudParams>) -> Swift.Int
  public func getParam() -> Algo.IDCardAntiFraudParams
  public func setOption(option: Swift.String, value: Swift.String) -> Swift.Int
  public func getOption(option: Swift.String) -> Swift.String
  public func exec(image: UIKit.UIImage, result: Swift.UnsafeMutablePointer<Algo.IDCardAntiFraudResult>) -> Swift.Int
  public func stop() -> Swift.Int
  public func getDebugInfo(setting: Swift.UnsafePointer<Algo.IDCardAntiFraudDebugInfoSetting>, info: Swift.UnsafeMutablePointer<Algo.IDCardAntiFraudDebugInfo>) -> Swift.Int
  public func getJsonReport() -> (Swift.String, Swift.Int)
  public func setPubkey(key: Swift.String) -> Swift.Int
  override public init()
}
public struct _MRZServiceModel {
  public init(MRZ_00: Swift.String, MRZ_01: Swift.String)
}
public struct MRZTD1ServiceModel {
  public init(TD1_00: Swift.String, TD1_01: Swift.String)
}
@_inheritsConvenienceInitializers public class MRZService : Algo.CoreService {
  @objc deinit
  public struct MRZModelVersion_ {
    public var models: (Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion, Algo.CoreService.ModelVersion)
  }
  public func getVersion(mrzType: Algo.MRZType) -> (Algo.MRZService.MRZModelVersion_, Swift.Int, Swift.Int)
  public func initialize(mrzType: Algo.MRZType, ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, roi: Swift.UnsafePointer<Algo.ServiceROI>) -> Swift.Int
  public func initialize(serviceModel: Algo.MRZServiceModel, mrzType: Algo.MRZType, ui_params: Swift.UnsafePointer<Algo.ServiceUIParams>, roi: Swift.UnsafePointer<Algo.ServiceROI>) -> Swift.Int
  public func free() -> Swift.Int
  public func getParam() -> Algo.MRZParams
  public func setParam(params: Swift.UnsafePointer<Algo.MRZParams>) -> Swift.Int
  public func getOption(option: Swift.String) -> Swift.String
  public func setOption(option: Swift.String, value: Swift.String) -> Swift.Int
  public func getDebugInfo(setting: Swift.UnsafePointer<Algo.MRZDebugInfoSetting>, info: Swift.UnsafeMutablePointer<Algo.MRZDebugInfo>) -> Swift.Int
  public func exec(image: UIKit.UIImage, result: Swift.UnsafeMutablePointer<Algo.MRZResult>) -> Swift.Int
  public func stop() -> Swift.Int
  public func getJsonReport() -> (Swift.String, Swift.Int)
  public func CCharToString(_ cCharTuple: Swift.UnsafePointer<Swift.CChar>) -> Swift.String
  public func getCropImage() -> UIKit.UIImage?
  public func setPubkey(key: Swift.String) -> Swift.Int
  public func getMRZJsonReport() -> Swift.String
  override public init()
}
public class EncryptService {
  public init()
  public func encryptWithRSAPrivateKey(plaintext: Swift.String) -> Swift.String?
  public func decryptWithRSAPublicKey(encryptedText: Swift.String, publicKey: Swift.String) -> Swift.String?
  @objc deinit
}
